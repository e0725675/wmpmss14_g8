<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:camel="http://camel.apache.org/schema/spring"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
	http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context-2.5.xsd
	http://camel.apache.org/schema/spring
	http://camel.apache.org/schema/spring/camel-spring-2.13.0.xsd
	http://www.springframework.org/schema/tx
	http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">
	
	<!-- import the routes from another XML file -->
	<import resource="TestContext.xml"/>
	<import resource="SentimentContext.xml"/>
	<import resource="FacebookContext.xml"/>
	<import resource="ProfaneContext.xml"/>

	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="org.apache.derby.jdbc.EmbeddedDriver"/>
		<property name="url" value="jdbc:derby:memory:orders;create=true"/>
		<property name="username" value=""/>
		<property name="password" value=""/>
	</bean>


	<bean id="hibernate" class="org.apacheextras.camel.component.hibernate.HibernateComponent">
		<property name="sessionFactory" ref="sessionFactory"/>
		<property name="transactionStrategy" ref="springTransactionStrategy"/>
	</bean>

	<bean id="springTransactionStrategy" class="org.apacheextras.camel.component.hibernate.SpringTransactionStrategy">
		<constructor-arg ref="sessionFactory"/>
		<constructor-arg ref="transactionTemplate"/>
	</bean>
	
	<bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory"/>
	</bean>
	
	<bean id="transactionTemplate" class="org.springframework.transaction.support.TransactionTemplate">
		<property name="transactionManager" ref="transactionManager"/>
	</bean>

	<bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="packagesToScan" value="at.tuwien.sentimentanalyzer.entities" />
		
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.DerbyTenSevenDialect</prop>
				<prop key="hibernate.hbm2ddl.auto">create</prop>
			</props>
		</property>
	</bean>

	<tx:annotation-driven transaction-manager="transactionManager" />
	
	<bean id="properties" class="org.apache.camel.component.properties.PropertiesComponent">
    	<property name="location" value="/search.properties"/>
	</bean>
	
	<camelContext id="MAIN-CAMEL-CONTEXT" xmlns="http://camel.apache.org/schema/spring">
		<!-- references to other routeContexts - dont forget to link the file as well!!! -->
		<routeContextRef ref="SentimentRoutes"/>
		<!--<routeContextRef ref="FacebookRoutes"/>-->
		<routeContextRef ref="TestRoutes"/>
		<routeContextRef ref="ProfaneRoutes"/>
	</camelContext>

	<camel:sslContextParameters id="sslContextParameters">
		<camel:trustManagers>
		<camel:keyStore resource="/users/home/server/truststore.jks" password="keystorePassword"/>
		</camel:trustManagers>
	</camel:sslContextParameters>
	
	<bean id="messageConverter" class="at.tuwien.sentimentanalyzer.beans.MessageConverter" />
	
	
	<bean id="redditConvertor" class = "at.tuwien.sentimentanalyzer.beans.RedditConvertor" />
	
	<bean id="routeCreator" class="at.tuwien.sentimentanalyzer.beans.RouteCreator">
		<constructor-arg ref="MAIN-CAMEL-CONTEXT" />
	</bean>
	
	<bean id="mainProperties" class="at.tuwien.sentimentanalyzer.PropertiesLoader">
		<constructor-arg value="main.properties" />
	</bean>
	
	<bean id="messageMocker" class="at.tuwien.sentimentanalyzer.beans.MessageMocker" scope="singleton">
		<constructor-arg index="0" value= "mock_userlist.txt"/>
		<constructor-arg index="1" value= "mock_wordlist.txt"/>
		<constructor-arg index="2">
			<list>
				<value>mock_swearwordlist.txt</value>
				<value>mock_nonwordslist.txt</value>
			</list>
		</constructor-arg>
	</bean>
	
	<bean id="reportGenerator" class="at.tuwien.sentimentanalyzer.beans.ReportGenerator" />
    
    <bean id="swearChecker" class="at.tuwien.sentimentanalyzer.beans.SwearChecker" >
    	<constructor-arg ref="dataSource"/>
    </bean>
</beans>